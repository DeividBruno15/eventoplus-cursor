---
description:
globs:
alwaysApply: false
---
# Padr√µes de Componentes UI

## üö´ AVISO CR√çTICO: N√ÉO ALTERE DESIGN
**Antes de qualquer modifica√ß√£o, lembre-se: NUNCA altere aspectos visuais, √≠cones, cores ou layouts existentes. Apenas funcionalidade pode ser modificada.**

## Estrutura de Componentes

### Organiza√ß√£o
- **UI Base**: [client/src/components/ui/](mdc:client/src/components/ui/) - componentes shadcn/ui
- **Layout**: [client/src/components/layout/](mdc:client/src/components/layout/) - header, footer, sidebar
- **Auth**: [client/src/components/auth/](mdc:client/src/components/auth/) - autentica√ß√£o e guards
- **Features**: Componentes espec√≠ficos por funcionalidade

### Componentes UI Dispon√≠veis
- **Formul√°rios**: Button, Input, Select, Textarea, Checkbox, Switch
- **Layout**: Card, Dialog, Sheet, Tabs, Accordion
- **Feedback**: Alert, Toast, Progress, Skeleton
- **Navega√ß√£o**: Breadcrumb, Pagination, Command
- **Data**: Table, Calendar, Chart

## Padr√µes de Uso

### Formul√°rios
```tsx
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Form, FormField, FormItem, FormLabel, FormControl, FormMessage } from "@/components/ui/form";
```

### Dialogs e Modais
```tsx
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
```

### Cards e Layout
```tsx
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
```

### Estados de Loading
- Use `Skeleton` para carregamento de conte√∫do
- Use `Spinner` customizado para a√ß√µes
- Implemente estados de loading em bot√µes

### Tratamento de Erros
- Use `Alert` para mensagens de erro
- Use `Toast` para feedback de a√ß√µes
- Implemente `ErrorBoundary` para erros cr√≠ticos

## Layout System

### Header/Navigation
- Use [header-clickmax.tsx](mdc:client/src/components/layout/header-clickmax.tsx) como padr√£o
- Mantenha navega√ß√£o consistente entre p√°ginas
- Implemente indicadores de usu√°rio logado

### Sidebar
- Use [sidebar-new.tsx](mdc:client/src/components/layout/sidebar-new.tsx)
- Adapte menu baseado no tipo de usu√°rio
- Mantenha estado de collapse/expand

### Footer
- Use [footer-clickmax.tsx](mdc:client/src/components/layout/footer-clickmax.tsx)
- Mantenha links e informa√ß√µes atualizadas

## Responsividade
- Use classes Tailwind para breakpoints
- Teste em mobile, tablet e desktop
- Use `use-mobile.tsx` hook quando necess√°rio

## Acessibilidade
- Use componentes Radix UI que j√° incluem ARIA
- Mantenha labels descritivos
- Implemente navega√ß√£o por teclado
